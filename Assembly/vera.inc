; VERA constants and functions for Commander X16
; for use with CA65

VERA_REG_START =$9F20

VERA_ADDR_LOW 	= VERA_REG_START+0
VERA_ADDR_MID 	= VERA_REG_START+1
VERA_ADDR_HIGH  = VERA_REG_START+2
VERA_DATA0 		= VERA_REG_START+3
VERA_DATA1 		= VERA_REG_START+4
VERA_CTL 		= VERA_REG_START+5
VERA_IEN 		= VERA_REG_START+6
VERA_ISR 		= VERA_REG_START+7
VERA_IRQ 		= VERA_REG_START+8

VERA_DC_VIDEO 			= VERA_REG_START+9
VERA_DC_SCALE_HORIZON	= VERA_REG_START+10
VERA_DC_SCALE_VERTICAL	= VERA_REG_START+11
VERA_DC_BORDER			= VERA_REG_START+12
VERA_DC_HORIZON_START	= VERA_REG_START+13
VERA_DC_HORIZON_STOP	= VERA_REG_START+14
VERA_DC_VERTICAL_START	= VERA_REG_START+15
VERA_DC_VERTICAL_STOP	= VERA_REG_START+16

VERA_LAYER0_CONFIG					= VERA_REG_START+17
VERA_LAYER0_MAPBASE					= VERA_REG_START+18
VERA_LAYER0_TILEBASE				= VERA_REG_START+19
VERA_LAYER0_HORIZON_SCROLL_LOW		= VERA_REG_START+20
VERA_LAYER0_HORIZON_SCROLL_HIGH		= VERA_REG_START+21
VERA_LAYER0_VERTICAL_SCROLL_LOW		= VERA_REG_START+22
VERA_LAYER0_VERTICAL_SCROLL_HIGH	= VERA_REG_START+23

VERA_LAYER1_CONFIG					= VERA_REG_START+24
VERA_LAYER1_MAPBASE					= VERA_REG_START+25
VERA_LAYER1_TILEBASE				= VERA_REG_START+26
VERA_LAYER1_HORIZON_SCROLL_LOW		= VERA_REG_START+27
VERA_LAYER1_HORIZON_SCROLL_HIGH		= VERA_REG_START+28
VERA_LAYER1_VERTICAL_SCROLL_LOW		= VERA_REG_START+29
VERA_LAYER1_VERTICAL_SCROLL_HIGH	= VERA_REG_START+30

VERA_AUDIO_CTRL	= VERA_REG_START+31
VERA_AUDIO_RATE	= VERA_REG_START+32
VERA_AUDIO_DATA	= VERA_REG_START+33

VERA_SPI_DATA	= VERA_REG_START+34
VERA_SPI_CTRL	= VERA_REG_START+35

VREG_CMP  = $F0000
VREG_PAL  = $F1000
VREG_LAY1 = $F2000
VREG_LAY2 = $F3000
VREG_SPR  = $F4000
VREG_SPRD = $F5000

AUTO_INC_1 = $100000

; VRAM Addresses
VRAM_PETSCII   = $0F800
VRAM_PSG       = $1F9C0
VRAM_PALETTE   = $1FA00
VRAM_SPRATTR   = $1FC00

.macro vset addr
	lda #<(addr >> 16) | $10
	sta VERA_ADDR_HIGH
	lda #<(addr >> 8)
	sta VERA_ADDR_MID
	lda #<(addr)
	sta VERA_ADDR_LOW
.endmacro

.macro vstore addr
	pha
	+vset addr
	pla
	sta VERA_DATA0
.endmacro

.macro vload addr
	+vset addr
	lda VERA_DATA0
.endmacro

.macro sprset offset 
	lda #<(vreg_sprd >> 16) | $10
	sta VERA_ADDR_HIGH
	txa
	lsr
	lsr
	lsr
	lsr
	lsr
	clc
	adc #<(vreg_sprd + offset >> 8)
	sta VERA_ADDR_MID
	txa
	asl
	asl
	asl
	clc
	adc #<((vreg_sprd + offset))
	sta VERA_ADDR_LOW
.endmacro

.macro sprload offset 
	+sprset offset
	lda VERA_DATA0
.endmacro

.macro sprstore offset 
	pha
	+sprset offset
	pla
	sta VERA_DATA0
.endmacro

.macro video_init
	lda #0
	sta VERA_CTL ; set ADDR1 active
	sta VERA_ADDR_MID
	lda #$1F    ; $F0000 increment 1
	sta VERA_ADDR_HIGH
	lda #$00
	sta VERA_ADDR_LOW
	lda #1
	sta VERA_DATA0 ; VGA output
.endmacro
